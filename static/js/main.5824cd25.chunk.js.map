{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","section","INITIAL_STATE","name","number","ContactForm","state","handleInputChange","e","currentTarget","value","setState","handleBtnSubmit","preventDefault","props","onSubmit","reset","this","form","autoComplete","label","type","pattern","title","required","onChange","input","btn","Component","Filter","Contact","deleteContact","showFilteredContacts","map","contact","contactItem","onClick","id","ContactList","contactList","App","contacts","filter","addContact","uuidv4","some","toLowerCase","alert","prevState","changeFilter","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5824cd25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Ncxl\",\"label\":\"ContactForm_label__3cD8k\",\"input\":\"ContactForm_input__3JBgz\",\"btn\":\"ContactForm_btn__2LhQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"Contact_contactItem__k3u0S\",\"contact\":\"Contact_contact__3HwnF\",\"btn\":\"Contact_btn__LItL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1GufW\",\"input\":\"Filter_input__3Borx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1DHY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1JWFE\",\"title\":\"Section_title__2x9_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2mw2n\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Section;","import { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleBtnSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    \r\n    return (\r\n      <form\r\n            onSubmit={this.handleBtnSubmit} \r\n            className={s.form} \r\n            autoComplete=\"off\">\r\n        \r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n                value={name}\r\n                onChange={this.handleInputChange}\r\n                className={s.input}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n                value={number}\r\n                onChange={this.handleInputChange}\r\n                className={s.input}\r\n          />\r\n        </label>        \r\n\r\n        <button type=\"submit\" className={s.btn}>Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.input}>\r\n      </input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nfunction Contact({ deleteContact, showFilteredContacts }) {\r\n  return (showFilteredContacts().map(contact => {\r\n    return (\r\n      <li key={contact.id} className={s.contactItem}>\r\n        <p className={s.contact}>• {contact.name}: {contact.number}</p>\r\n        <button className={s.btn} onClick={() => deleteContact(contact.id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  }));\r\n};\r\n\r\nContact.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n  showFilteredContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport Contact from '../Contact';\r\n\r\nfunction ContactList({ deleteContact, showFilteredContacts }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      <Contact\r\n        showFilteredContacts={showFilteredContacts}\r\n        deleteContact={deleteContact}>\r\n      </Contact>\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n  showFilteredContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './App.css';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  //===== Метод добавления нового контакта =====\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    // Проверка на повторный ввод существующего контакта\n    contacts.some(contact =>\n      contact.name.toLowerCase() === name.toLowerCase())\n      ?\n        alert(`${name} is already in contacts.`)\n      : \n        this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  }\n\n  //===== Метод удаления контакта =====\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  //===== Метод фильтра\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  // делаем видимыми контакты, которые соответствуют тексту поиска в инпуте\n  showFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n      contact.number.includes(filter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const { addContact, changeFilter, deleteContact, showFilteredContacts } = this;\n    return (\n      <Container>\n        <Section>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={addContact} />\n        </Section>\n        \n        <Section>\n          <h2>Contacts</h2>\n          <Filter\n            value={filter}\n            onChange={changeFilter} />\n          <ContactList\n            showFilteredContacts={showFilteredContacts}\n            deleteContact={deleteContact} />\n        </Section>\n      </Container>\n    );\n  }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}